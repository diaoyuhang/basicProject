<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.basicproject.dao.FileDao">
  <resultMap id="BaseResultMap" type="com.example.basicproject.dao.domain.File">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="md5" jdbcType="VARCHAR" property="md5" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="editor_id" jdbcType="BIGINT" property="editorId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="editor" jdbcType="VARCHAR" property="editor" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.basicproject.dao.domain.File">
    <result column="data" jdbcType="BLOB" property="data" />
  </resultMap>
  <sql id="Base_Column_List">
    id, file_name, file_type, md5, create_time, edit_time, creator_id, editor_id, creator, 
    editor, rec_time
  </sql>
  <sql id="Blob_Column_List">
    `data`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectIdByMD5" resultType="java.lang.Long">
    select id
    from file
    where md5=#{md5,jdbcType=VARCHAR}
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from file
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.basicproject.dao.domain.File" useGeneratedKeys="true">
    insert into file (file_name, file_type, md5, 
      create_time, edit_time, creator_id, 
      editor_id, creator, editor, 
       `data`)
    values (#{fileName,jdbcType=VARCHAR}, #{fileType,jdbcType=VARCHAR}, #{md5,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{editTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=BIGINT}, 
      #{editorId,jdbcType=BIGINT}, #{creator,jdbcType=VARCHAR}, #{editor,jdbcType=VARCHAR}, 
       #{data,jdbcType=BLOB})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.basicproject.dao.domain.File" useGeneratedKeys="true">
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="md5 != null">
        md5,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="editorId != null">
        editor_id,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="editor != null">
        editor,
      </if>
      <if test="data != null">
        `data`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="md5 != null">
        #{md5,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="editorId != null">
        #{editorId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="editor != null">
        #{editor,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=BLOB},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.basicproject.dao.domain.File">
    update file
    <set>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="md5 != null">
        md5 = #{md5,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="editorId != null">
        editor_id = #{editorId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="editor != null">
        editor = #{editor,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        `data` = #{data,jdbcType=BLOB},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.basicproject.dao.domain.File">
    update file
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      md5 = #{md5,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=BIGINT},
      editor_id = #{editorId,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      editor = #{editor,jdbcType=VARCHAR},
      `data` = #{data,jdbcType=BLOB}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.basicproject.dao.domain.File">
    update file
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      md5 = #{md5,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=BIGINT},
      editor_id = #{editorId,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      editor = #{editor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>