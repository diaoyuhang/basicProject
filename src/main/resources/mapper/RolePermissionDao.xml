<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.basicproject.dao.RolePermissionDao">
  <resultMap id="BaseResultMap" type="com.example.basicproject.dao.domain.RolePermission">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="permission_id" jdbcType="BIGINT" property="permissionId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="editor_id" jdbcType="BIGINT" property="editorId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="editor" jdbcType="VARCHAR" property="editor" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, permission_id, create_time, edit_time, creator_id, editor_id, creator, 
    editor, rec_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_permission
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByRoleId" resultType="com.example.basicproject.dao.domain.RolePermission">
    select * from
      role_permission
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>

  <select id="selectPermissionIdByRoleId" resultType="java.lang.Long">
    select permission_id
    from role_permission
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>

  <select id="selectPermissionIdByRoleIds" resultType="java.lang.Long">
    select distinct permission_id
    from role_permission
    where role_id in
    <foreach collection='roleIds' open="(" close=")" item='roleId' index='index' separator=','>
      #{roleId,jdbcType=BIGINT}
    </foreach>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <delete id="deleteByRoleId">
      delete from role_permission
      where role_id = #{roleId,jdbcType=BIGINT}

    </delete>
  <delete id="deleteByPrimaryKeys">
    delete from role_permission
    where id =
    <foreach collection='ids' open="(" close=")" item='id' index='index' separator=','>
      #{id,jdbcType=BIGINT}
    </foreach>
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.basicproject.dao.domain.RolePermission" useGeneratedKeys="true">
    insert into role_permission (role_id, permission_id, create_time, 
      edit_time, creator_id, editor_id, 
      creator, editor
      )
    values (#{roleId,jdbcType=BIGINT}, #{permissionId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{editTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=BIGINT}, #{editorId,jdbcType=BIGINT}, 
      #{creator,jdbcType=VARCHAR}, #{editor,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.basicproject.dao.domain.RolePermission" useGeneratedKeys="true">
    insert into role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="editorId != null">
        editor_id,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="editor != null">
        editor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="editorId != null">
        #{editorId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="editor != null">
        #{editor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="batchInsert">
    insert into role_permission
    (role_id, permission_id, create_time,
    edit_time, creator_id, editor_id,
    creator, editor
    )
    values
    <foreach collection='rolePermissionList' item='rp' index='index' separator=','>
      (#{rp.roleId,jdbcType=BIGINT}, #{rp.permissionId,jdbcType=BIGINT}, #{rp.createTime,jdbcType=TIMESTAMP},
      #{rp.editTime,jdbcType=TIMESTAMP}, #{rp.creatorId,jdbcType=BIGINT}, #{rp.editorId,jdbcType=BIGINT},
      #{rp.creator,jdbcType=VARCHAR}, #{rp.editor,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.basicproject.dao.domain.RolePermission">
    update role_permission
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="editorId != null">
        editor_id = #{editorId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="editor != null">
        editor = #{editor,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.basicproject.dao.domain.RolePermission">
    update role_permission
    set role_id = #{roleId,jdbcType=BIGINT},
      permission_id = #{permissionId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=BIGINT},
      editor_id = #{editorId,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      editor = #{editor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>