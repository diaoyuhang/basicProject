<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.basicproject.dao.VideoDao">
  <resultMap id="BaseResultMap" type="com.example.basicproject.dao.domain.Video">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="video_name" jdbcType="VARCHAR" property="videoName" />
    <result column="video_type" jdbcType="VARCHAR" property="videoType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="editor_id" jdbcType="BIGINT" property="editorId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="editor" jdbcType="VARCHAR" property="editor" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.basicproject.dao.domain.Video">
    <result column="data" jdbcType="BLOB" property="data" />
  </resultMap>
  <sql id="Base_Column_List">
    id, video_name, video_type, create_time, edit_time, creator_id, editor_id, creator, 
    editor, rec_time
  </sql>
  <sql id="Blob_Column_List">
    `data`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from video
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from video
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.basicproject.dao.domain.Video" useGeneratedKeys="true">
    insert into video (video_name, video_type, create_time, 
      edit_time, creator_id, editor_id, 
      creator, editor,
      `data`)
    values (#{videoName,jdbcType=VARCHAR}, #{videoType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{editTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=BIGINT}, #{editorId,jdbcType=BIGINT}, 
      #{creator,jdbcType=VARCHAR}, #{editor,jdbcType=VARCHAR},
      #{data,jdbcType=BLOB})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.basicproject.dao.domain.Video" useGeneratedKeys="true">
    insert into video
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="videoName != null">
        video_name,
      </if>
      <if test="videoType != null">
        video_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="editorId != null">
        editor_id,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="editor != null">
        editor,
      </if>
      <if test="data != null">
        `data`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="videoName != null">
        #{videoName,jdbcType=VARCHAR},
      </if>
      <if test="videoType != null">
        #{videoType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="editorId != null">
        #{editorId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="editor != null">
        #{editor,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=BLOB},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.basicproject.dao.domain.Video">
    update video
    <set>
      <if test="videoName != null">
        video_name = #{videoName,jdbcType=VARCHAR},
      </if>
      <if test="videoType != null">
        video_type = #{videoType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="editorId != null">
        editor_id = #{editorId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="editor != null">
        editor = #{editor,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        `data` = #{data,jdbcType=BLOB},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.basicproject.dao.domain.Video">
    update video
    set video_name = #{videoName,jdbcType=VARCHAR},
      video_type = #{videoType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=BIGINT},
      editor_id = #{editorId,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      editor = #{editor,jdbcType=VARCHAR}
      `data` = #{data,jdbcType=BLOB}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.basicproject.dao.domain.Video">
    update video
    set video_name  = #{videoName,jdbcType=VARCHAR},
        video_type  = #{videoType,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        edit_time   = #{editTime,jdbcType=TIMESTAMP},
        creator_id  = #{creatorId,jdbcType=BIGINT},
        editor_id   = #{editorId,jdbcType=BIGINT},
        creator     = #{creator,jdbcType=VARCHAR},
        editor      = #{editor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>